uniform	vec2		u_ibs;
uniform float		u_znear, u_zfar, u_blur_radius, u_ao_radius, u_fx_scale;
uniform	sampler2D	u_depth, u_tex;

float	DecodeDepth(vec2 UV)
{
	float	z_b = texture2D(u_depth, UV).x;
	float	z_e = 0.5 * (u_znear * u_zfar) / (u_zfar - z_b * (u_zfar - u_znear));
	return z_e;
}

vec4	BlurSample(vec2 UV, float ref_depth, vec4 ref_source)
{
	float	val_depth = DecodeDepth(UV);
	if	(abs(val_depth - ref_depth) > (u_ao_radius / 1000.0))
		return ref_source;
	return texture2D(u_tex, UV);
}

void	main()
{
	vec2	UV = gl_FragCoord.xy * (u_ibs * u_fx_scale);
	float	ref_depth = DecodeDepth(UV);
	vec4	ref_source = texture2D(u_tex, UV);

	float	blur_factor = u_blur_radius * (u_ibs.x * u_fx_scale);

	vec4	txl = vec4(0.0, 0.0, 0.0, 0.0);
	for	(float v = -0.5; v < 0.51; v += 0.25)
		for	(float u = -0.5; u < 0.51; u += 0.25)
				txl += BlurSample(UV + vec2(u, v) * blur_factor, ref_depth, ref_source);

	gl_FragColor = txl / 25.0;
}
